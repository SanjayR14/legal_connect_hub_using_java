/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author ruban
 */
package Login1;

import Front.*;
import Login1.*;
import MainLogin.*;
import LawyerHome.*;
import java.awt.BorderLayout;

import java.awt.CardLayout;
import java.awt.Color;
import java.awt.GridLayout;
import javax.swing.*;
import java.awt.event.ActionEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import GoogleSearchAppGUI.*;
import java.awt.event.ActionListener;
import javafx.scene.text.Font;


public class Login1 extends javax.swing.JFrame {

    CardLayout cardLayout;
    String MainLogin ;
    private String enteredUsername;
     
    
    public Login1(String username) {
        initComponents();
        this.MainLogin = username;
        this.enteredUsername = username;
        cardLayout = (CardLayout) jPanel2.getLayout();
        //showUserProfile(username);
    }
        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        profile = new javax.swing.JButton();
        case_status = new javax.swing.JButton();
        hire = new javax.swing.JButton();
        Logout = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        About = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        p2home = new javax.swing.JPanel();
        bot = new javax.swing.JButton();
        search = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        p3hire = new javax.swing.JPanel();
        showlawyer = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jComboBox3 = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        p1profile = new javax.swing.JPanel();
        proffile = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        USERNAME = new javax.swing.JTextField();
        EMAIL = new javax.swing.JTextField();
        PHONE_NUMBER = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 153, 0));

        profile.setBackground(new java.awt.Color(255, 153, 0));
        profile.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        profile.setText("Profile");
        profile.setBorder(null);
        profile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profileActionPerformed(evt);
            }
        });

        case_status.setBackground(new java.awt.Color(255, 153, 0));
        case_status.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        case_status.setText("Case Status");
        case_status.setBorder(null);
        case_status.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                case_statusActionPerformed(evt);
            }
        });

        hire.setBackground(new java.awt.Color(255, 153, 0));
        hire.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        hire.setText("Hire A Lawyer");
        hire.setBorder(null);
        hire.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hireMouseClicked(evt);
            }
        });
        hire.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hireActionPerformed(evt);
            }
        });

        Logout.setBackground(new java.awt.Color(255, 153, 0));
        Logout.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        Logout.setText("LogOut");
        Logout.setBorder(null);
        Logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(255, 153, 0));
        jButton4.setFont(new java.awt.Font("Segoe UI", 3, 10)); // NOI18N
        jButton4.setText("Get Quick Guidance");
        jButton4.setBorder(null);

        About.setBackground(new java.awt.Color(255, 153, 0));
        About.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        About.setText("Home");
        About.setBorder(null);
        About.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AboutActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setIcon(new javax.swing.ImageIcon("R:\\cit-22smcb0055\\SEM-III\\JAVA\\Project copy\\Main\\icons\\icons8_law_40px_1.png")); // NOI18N
        jLabel8.setText("L C H");
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(Logout))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(hire))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(case_status, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(profile, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(13, 13, 13)
                                        .addComponent(About, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 13, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel8)
                .addGap(34, 34, 34)
                .addComponent(About)
                .addGap(46, 46, 46)
                .addComponent(profile)
                .addGap(45, 45, 45)
                .addComponent(case_status)
                .addGap(40, 40, 40)
                .addComponent(hire)
                .addGap(43, 43, 43)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Logout)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new java.awt.CardLayout());

        p2home.setBackground(new java.awt.Color(0, 204, 204));

        bot.setBackground(new java.awt.Color(0, 204, 204));
        bot.setText("Ask Laila.");
        bot.setBorder(null);
        bot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botActionPerformed(evt);
            }
        });

        search.setText("search..");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        jLabel10.setIcon(new javax.swing.ImageIcon("R:\\cit-22smcb0055\\SEM-III\\JAVA\\Project copy\\Main\\icons\\icons8_bot_24px.png")); // NOI18N

        jLabel9.setText("Copyright © 2017,");

        jLabel11.setText(" LCH. All rights reserved.");

        jLabel12.setBackground(new java.awt.Color(0, 0, 0));
        jLabel12.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel12.setText("LEGAL CONNECT HUB");

        jTextPane1.setBackground(new java.awt.Color(0, 204, 204));
        jTextPane1.setBorder(null);
        jTextPane1.setText("OUR VISION\nAt Legal Connect Hub, our vision is to revolutionize the legal landscape by providing a unified platform where users and lawyers converge. We aim to simplify legal processes, ensuring accessibility, transparency, and efficiency for all involved parties.\n\nCONVERGENCE PLATFORM\nLegal Connect Hub serves as a comprehensive hub, enabling users to connect with experienced lawyers, facilitating consultations, and managing legal requirements, all within a single, user-friendly interface.\n\nBINDING USERS WITH LAWYERS\nOur platform bridges the gap between users in need of legal advice and lawyers specializing in various domains. It creates an environment conducive to seamless communication, collaboration, and effective resolution of legal matters.");
        jScrollPane1.setViewportView(jTextPane1);

        javax.swing.GroupLayout p2homeLayout = new javax.swing.GroupLayout(p2home);
        p2home.setLayout(p2homeLayout);
        p2homeLayout.setHorizontalGroup(
            p2homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p2homeLayout.createSequentialGroup()
                .addGap(322, 322, 322)
                .addComponent(jLabel11)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p2homeLayout.createSequentialGroup()
                .addGroup(p2homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(p2homeLayout.createSequentialGroup()
                        .addGap(0, 38, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 826, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(p2homeLayout.createSequentialGroup()
                        .addGroup(p2homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, p2homeLayout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel9)
                                .addGap(312, 312, 312)
                                .addComponent(bot, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, p2homeLayout.createSequentialGroup()
                                .addGroup(p2homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, p2homeLayout.createSequentialGroup()
                                        .addGap(185, 185, 185)
                                        .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, p2homeLayout.createSequentialGroup()
                                        .addGap(288, 288, 288)
                                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(19, 19, 19))
        );
        p2homeLayout.setVerticalGroup(
            p2homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p2homeLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel12)
                .addGap(18, 18, 18)
                .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(p2homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(p2homeLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(p2homeLayout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(p2homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(p2homeLayout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(p2homeLayout.createSequentialGroup()
                                .addComponent(bot, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 12, Short.MAX_VALUE)))))
                .addComponent(jLabel11))
        );

        jPanel2.add(p2home, "card2");

        p3hire.setBackground(new java.awt.Color(0, 0, 0));

        showlawyer.setText("show lawyers list");
        showlawyer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showlawyerActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "select-district", "chennai", "coimbatore", "virudhunagar", "tirrupur" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "select category", "min", "moderate", "max" }));

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "select", "criminal", "civil", "family" }));
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("LEGAL CONNECT HUB");

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("SEARCH BY ");

        javax.swing.GroupLayout p3hireLayout = new javax.swing.GroupLayout(p3hire);
        p3hire.setLayout(p3hireLayout);
        p3hireLayout.setHorizontalGroup(
            p3hireLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p3hireLayout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(p3hireLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(p3hireLayout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(85, 85, 85)
                        .addGroup(p3hireLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(p3hireLayout.createSequentialGroup()
                                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(88, 88, 88)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(showlawyer, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(p3hireLayout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(61, 61, 61)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(287, Short.MAX_VALUE))
        );
        p3hireLayout.setVerticalGroup(
            p3hireLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p3hireLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 127, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(37, 37, 37)
                .addGroup(p3hireLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(69, 69, 69)
                .addComponent(showlawyer)
                .addGap(110, 110, 110))
        );

        jPanel2.add(p3hire, "card3");

        p1profile.setBackground(new java.awt.Color(153, 255, 153));

        proffile.setBackground(new java.awt.Color(204, 153, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Profile");

        jLabel2.setText("USERNAME");

        jLabel3.setText("EMAIL");

        jLabel4.setText("PHONE-NUMBER");

        USERNAME.setEditable(false);
        USERNAME.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        USERNAME.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                USERNAMEActionPerformed(evt);
            }
        });

        EMAIL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EMAILActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout proffileLayout = new javax.swing.GroupLayout(proffile);
        proffile.setLayout(proffileLayout);
        proffileLayout.setHorizontalGroup(
            proffileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(proffileLayout.createSequentialGroup()
                .addGroup(proffileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(proffileLayout.createSequentialGroup()
                        .addGap(199, 199, 199)
                        .addGroup(proffileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(87, 87, 87)
                        .addGroup(proffileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PHONE_NUMBER, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(EMAIL, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(USERNAME, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(proffileLayout.createSequentialGroup()
                        .addGap(318, 318, 318)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(376, Short.MAX_VALUE))
        );
        proffileLayout.setVerticalGroup(
            proffileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(proffileLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addGap(75, 75, 75)
                .addGroup(proffileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(USERNAME, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                .addGroup(proffileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(EMAIL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(70, 70, 70)
                .addGroup(proffileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(PHONE_NUMBER, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(127, 127, 127))
        );

        javax.swing.GroupLayout p1profileLayout = new javax.swing.GroupLayout(p1profile);
        p1profile.setLayout(p1profileLayout);
        p1profileLayout.setHorizontalGroup(
            p1profileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(proffile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        p1profileLayout.setVerticalGroup(
            p1profileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(proffile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        proffile.getAccessibleContext().setAccessibleParent(proffile);

        jPanel2.add(p1profile, "card1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void profileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profileActionPerformed
        // TODO add your handling code here:
        jPanel2.setVisible(true);
        cardLayout.show(jPanel2, "card1");
        showUserProfile(MainLogin);
        
 
    }//GEN-LAST:event_profileActionPerformed
    
    
    private void hireActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hireActionPerformed
        // TODO add your handling code here:
        jPanel2.setVisible(true);
        cardLayout.show(jPanel2, "card3");
            
    }//GEN-LAST:event_hireActionPerformed

    private void LogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutActionPerformed
        // TODO add your handling code here:
        new Front().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_LogoutActionPerformed

    private void botActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botActionPerformed
        // TODO add your handling code here:
        new GoogleSearchAppGUI().setVisible(true);
            
    }//GEN-LAST:event_botActionPerformed

    private DefaultListModel<String> model = new DefaultListModel<>(); 
    private JFrame frame = new JFrame("Lawyers List");
    
    private void hireMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hireMouseClicked
        // TODO add your handling code here:
         
    }//GEN-LAST:event_hireMouseClicked

    
private void showUserProfile(String username) {
    try (Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/java_project", "root", "0000")) {
        String query = "SELECT * FROM signup WHERE username = ?";
        try (PreparedStatement pstmt = conn.prepareStatement(query)) {
            pstmt.setString(1, username);
            try (ResultSet rs = pstmt.executeQuery()) {
                if (rs.next()) {
                    String name = rs.getString("username");
                    String phoneNum = rs.getString("phone_num");
                    String email = rs.getString("email");
                
                    
                    USERNAME.setText(name);
                    PHONE_NUMBER.setText(phoneNum);
                    EMAIL.setText(email);

                    
                    
                }
            }
        }
    } catch (SQLException e) {
        e.printStackTrace();
    }
}



  
 
    private void showlawyerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showlawyerActionPerformed
       
    try {
        Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/java_project", "root", "0000");
        PreparedStatement statement;
        
        String selectedDistrict = jComboBox1.getSelectedItem().toString();
        String selectedCategory = jComboBox3.getSelectedItem().toString();

       if (selectedDistrict.equals("select-district") && selectedCategory.equals("select")) {
            statement = connection.prepareStatement("SELECT * FROM lawyersignup");
        } else {
            statement = connection.prepareStatement("SELECT * FROM lawyersignup WHERE location = ? AND category = ?");
            statement.setString(1, selectedDistrict);
            statement.setString(2, selectedCategory);
        }

        ResultSet resultSet = statement.executeQuery();

        JFrame frame = new JFrame("Lawyers List");
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        frame.setSize(800, 600);

        JPanel panel = new JPanel(new GridLayout(0, 5, 1, 4));

        while (resultSet.next()) {
            String lawyerName = resultSet.getString("username");
            String lawyerUID = resultSet.getString("uid");
            String lawyerPhone = resultSet.getString("phone_num");
            String rating = resultSet.getString("rating");

            JLabel nameLabel = new JLabel("Username: " + lawyerName);
            JLabel uidLabel = new JLabel("UID: " + lawyerUID);
            JLabel phoneLabel = new JLabel("Phone: " + lawyerPhone);
            JLabel ratingLabel = new JLabel("Rating :" + rating);
            JButton hireButton = new JButton("Hire");

    hireButton.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    JFrame hireFrame = new JFrame("Case Details");
                    JPanel hirePanel = new JPanel(new GridLayout(0, 2));
                    
                    JLabel caseLabel = new JLabel("Case Details:");
                    JTextField caseField = new JTextField();
                    
                    JLabel clientLabel = new JLabel("Client Name:");
                    JTextField clientField = new JTextField();
                    
                    JButton submitButton = new JButton("Submit");
                    
                    submitButton.addActionListener((ActionEvent evt) -> {
                        String caseDetails = caseField.getText();
                        String clientName = clientField.getText();
                        
                        // Append the case details and client name to the database
                        try {
                            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/java_project", "root", "0000");
                            String insertQuery = "INSERT INTO cases (lawyerUID, case_details, client_name) VALUES (?, ?, ?)";
                            PreparedStatement pstmt = conn.prepareStatement(insertQuery);
                            pstmt.setString(1, lawyerUID);
                            pstmt.setString(2, caseDetails);
                            pstmt.setString(3, clientName);
                            
                            int rowsInserted = pstmt.executeUpdate();
                            if (rowsInserted > 0) {
                                JOptionPane.showMessageDialog(hireFrame, "Case details submitted successfully!");
                                sendHireRequestToLawyer(lawyerUID );
                            } else {
                                JOptionPane.showMessageDialog(hireFrame, "Failed to submit case details.", "Error", JOptionPane.ERROR_MESSAGE);
                            }
                            
                            pstmt.close();
                            conn.close();
                        } catch (SQLException ex) {
                            ex.printStackTrace();
                            JOptionPane.showMessageDialog(hireFrame, "Error: Unable to append case details to the database", "Error", JOptionPane.ERROR_MESSAGE);
                        }
                        
                        hireFrame.dispose();
                    });
                    
                    hirePanel.add(caseLabel);
                    hirePanel.add(caseField);
                    hirePanel.add(clientLabel);
                    hirePanel.add(clientField);
                    hirePanel.add(submitButton);
                    
                    hireFrame.add(hirePanel);
                    hireFrame.setSize(400, 200);
                    hireFrame.setVisible(true);
                }
            });

            
            
            
            panel.setBackground(new Color(255, 204, 204));
            panel.add(nameLabel);
            panel.add(uidLabel);
            panel.add(phoneLabel);
            panel.add(ratingLabel);
            panel.add(hireButton);
            panel.setSize(800, 400);
        }

        frame.add(panel);
        frame.pack();
        frame.setVisible(true);

        resultSet.close();
        statement.close();
        connection.close();
    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error: Unable to fetch lawyers list", "Error", JOptionPane.ERROR_MESSAGE);
    }

    }//GEN-LAST:event_showlawyerActionPerformed
    public void sendHireRequestToLawyer(String lawyerUID ) {
    try {
        // Establish a connection to your database (you'll need your actual database connection code here)
        Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/java_project", "root", "0000");

        // Check if the lawyer exists in the database based on the provided UID
        String checkQuery = "SELECT * FROM lawyersignup WHERE uid = ?";
        PreparedStatement checkStmt = conn.prepareStatement(checkQuery);
        checkStmt.setString(1, lawyerUID);

        ResultSet resultSet = checkStmt.executeQuery();

        if (resultSet.next()) {
            // Lawyer with the given UID exists, proceed to send the hire request
            // For demonstration purposes, let's assume we have a Requests table to store the requests

            String insertQuery = "INSERT INTO request (lawyer_uid, user_name, status) VALUES (?, ?, ?)";
            PreparedStatement insertStmt = conn.prepareStatement(insertQuery);

            // You'll need the user's UID to associate the request with the user
           

            // Set parameters for the request
            insertStmt.setString(1, lawyerUID);
            insertStmt.setString(2, enteredUsername);
            insertStmt.setString(3, "Pending"); // Initial request status is set as "Pending"

            // Execute the insert statement to store the request in the database
            int rowsInserted = insertStmt.executeUpdate();

            if (rowsInserted > 0) {
                // Insertion successful
                System.out.println("Hire request sent to lawyer with UID: " + lawyerUID);
            } else {
                // Insertion failed
                System.out.println("Failed to send hire request.");
            }

            insertStmt.close();
        } else {
            // Lawyer with the given UID doesn't exist
            System.out.println("Lawyer with UID: " + lawyerUID + " does not exist.");
        }

        // Close the result set, check statement, and connection
        resultSet.close();
        checkStmt.close();
        conn.close();
    } catch (SQLException ex) {
        // Handle any SQL exceptions
        ex.printStackTrace();
        System.out.println("Error: Unable to send hire request.");
    }
}
    
    private void displayRequestStatus(String username) {
    try (Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/java_project", "root", "0000")) {
        String query = "SELECT status FROM request WHERE user_name = ?";
        try (PreparedStatement pstmt = conn.prepareStatement(query)) {
            pstmt.setString(1, username);
            try (ResultSet rs = pstmt.executeQuery()) {
                if (rs.next()) {
                    String status = rs.getString("status");
                    // Display the status in your UI (e.g., show in a label or dialog box)
                    JOptionPane.showMessageDialog(this, "Your request status: " + status, "Request Status", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "No request status found for your account.", "Request Status", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        }
    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error fetching request status.", "Error", JOptionPane.ERROR_MESSAGE);
    }
}
// Assuming you have a JPanel named mainPanel where you want to display the requests
private void displayAllRequests(String username) {
    JPanel requestsPanel = new JPanel();
    requestsPanel.setLayout(new BoxLayout(requestsPanel, BoxLayout.Y_AXIS));

    try (Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/java_project", "root", "0000")) {
        String query = "SELECT lawyer_uid, status FROM request WHERE user_name = ? ORDER BY request_id DESC";
        try (PreparedStatement pstmt = conn.prepareStatement(query)) {
            pstmt.setString(1, username);
            try (ResultSet rs = pstmt.executeQuery()) {
                if (!rs.isBeforeFirst()) {
                    System.out.println("No requests found for the user: " + username);
                } else {
                    while (rs.next()) {
                        String lawyerUID = rs.getString("lawyer_uid");
                        String status = rs.getString("status");

                        JLabel lawyerLabel = new JLabel("Lawyer UID: " + lawyerUID);
                        JLabel statusLabel = new JLabel("Status: " + status);

                        JPanel requestPanel = new JPanel(new GridLayout(0, 1));
                        requestPanel.add(lawyerLabel);
                        requestPanel.add(statusLabel);

                        if (status.equals("Accepted")) {
                            JButton rateButton = new JButton("Rate");
                            requestPanel.add(rateButton);

                            rateButton.addActionListener(e -> {
                                String userInput = JOptionPane.showInputDialog(null, "Please enter your rating (1-5):");
                                try {
                                    int rating = Integer.parseInt(userInput);
                                    if (rating >= 1 && rating <= 5) {
                                        updateLawyerRating(lawyerUID, rating);
                                        updateDisplayedAverageRating();
                                    } else {
                                        JOptionPane.showMessageDialog(null, "Please enter a rating between 1 and 5.");
                                    }
                                } catch (NumberFormatException ex) {
                                    JOptionPane.showMessageDialog(null, "Invalid input. Please enter a number between 1 and 5.");
                                }
                            });
                        }

                        requestPanel.setBorder(BorderFactory.createLineBorder(new Color(173, 216, 230)));
                        requestsPanel.add(requestPanel);
                    }
                }
            }
        }
    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error fetching requests.", "Error", JOptionPane.ERROR_MESSAGE);
    }

    JScrollPane scrollPane = new JScrollPane(requestsPanel);
    scrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
    scrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);

    JDialog dialog = new JDialog();
    dialog.setTitle("Requests");
    dialog.setLayout(new BorderLayout());
    dialog.add(scrollPane, BorderLayout.CENTER);
    dialog.setSize(740, 450);
    dialog.setLocationRelativeTo(null);
    dialog.setVisible(true);
}

private void updateLawyerRating(String lawyerUID, int newRating) {
    try (Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/java_project", "root", "0000")) {
        // Fetch the current rating and the number of ratings for the lawyer
        String fetchQuery = "SELECT rating, num_ratings FROM lawyersignup WHERE uid = ?";
        try (PreparedStatement fetchStmt = conn.prepareStatement(fetchQuery)) {
            fetchStmt.setString(1, lawyerUID);
            try (ResultSet rs = fetchStmt.executeQuery()) {
                if (rs.next()) {
                    double currentRating = rs.getDouble("rating");
                    int numRatings = rs.getInt("num_ratings");
                    
                    // Calculate the new average rating
                    double updatedRating = ((currentRating * numRatings) + newRating) / (numRatings + 1);
                    
                    // Update the database with the new rating and increment the number of ratings
                    String updateQuery = "UPDATE lawyersignup SET rating = ?, num_ratings = ? WHERE uid = ?";
                    try (PreparedStatement updateStmt = conn.prepareStatement(updateQuery)) {
                        updateStmt.setDouble(1, updatedRating);
                        updateStmt.setInt(2, numRatings + 1);
                        updateStmt.setString(3, lawyerUID);
                        updateStmt.executeUpdate();
                    }
                }
            }
        }
    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(null, "Error updating lawyer rating.", "Error", JOptionPane.ERROR_MESSAGE);
    }
}



private void updateDisplayedAverageRating() {
    // Code to update the displayed average rating on the UI if needed
    // Fetch the average rating from the database and display it
}



    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void EMAILActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EMAILActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EMAILActionPerformed

    private void USERNAMEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_USERNAMEActionPerformed
        // TODO add your handling code here:
        enteredUsername = USERNAME.getText(); // Assuming enteredUsername is the username obtained from the text field

        // Call the method to fetch user profile with the entered username
        showUserProfile(enteredUsername);

        USERNAME.setText(enteredUsername);
    }//GEN-LAST:event_USERNAMEActionPerformed

    private void AboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AboutActionPerformed
        jPanel2.setVisible(true);
        cardLayout.show(jPanel2, "card2");
    }//GEN-LAST:event_AboutActionPerformed

    private void case_statusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_case_statusActionPerformed
        // TODO add your handling code here:
        displayAllRequests(enteredUsername);
        //displayRequestStatus(enteredUsername);
    }//GEN-LAST:event_case_statusActionPerformed

    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
        // TODO add your handling code here:
        jPanel2.setVisible(true);
        cardLayout.show(jPanel2, "card2");
    }//GEN-LAST:event_jLabel8MouseClicked

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed

        // TODO add your handling code here:
        String searchQuery = search.getText(); // Assuming you have a JTextField for user input named searchTextField

        if (!searchQuery.isEmpty()) {
            // Create a panel to display the search results
            JPanel resultsPanel = new JPanel();
            resultsPanel.setLayout(new BoxLayout(resultsPanel, BoxLayout.Y_AXIS));

            // Search the database based on the entered query
            try (Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/java_project", "root", "0000")) {
                // You can modify this query based on your database schema
                String query = "SELECT * FROM lawyersignup WHERE username LIKE ? OR uid = ?";

                try (PreparedStatement preparedStatement = connection.prepareStatement(query)) {
                    // Assuming article_number and lawyer_id are integer

                    // Using LIKE for partial matching on lawyer_name
                    preparedStatement.setString(1, "%" + searchQuery + "%");

                    // Assuming lawyer_id is an integer
                    try {
                        int lawyerID = Integer.parseInt(searchQuery);
                        preparedStatement.setInt(2, lawyerID);
                    } catch (NumberFormatException e) {
                        preparedStatement.setNull(2, java.sql.Types.INTEGER);
                    }

                    // Execute the query and retrieve the result set
                    ResultSet resultSet = preparedStatement.executeQuery();

                    // Check if any results are found
                    if (!resultSet.isBeforeFirst()) {
                        JOptionPane.showMessageDialog(this, "No results found.", "Search Results", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        // Process and display the results in the panel
                        while (resultSet.next()) {
                            String lawyerName = resultSet.getString("username");
                            String lawyerTable = resultSet.getString("uid");

                            // Create labels to display the details
                            JLabel nameLabel = new JLabel("Lawyer Name: " + lawyerName);
                            JLabel tableLabel = new JLabel("Lawyer Table: " + lawyerTable);

                            // Add labels to the results panel
                            resultsPanel.add(nameLabel);
                            resultsPanel.add(tableLabel);
                        }

                        // Display the results panel
                        JOptionPane.showMessageDialog(this, resultsPanel, "Search Results", JOptionPane.PLAIN_MESSAGE);
                    }
                }
            } catch (SQLException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Error executing search.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please enter a search query.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_searchActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton About;
    private javax.swing.JTextField EMAIL;
    private javax.swing.JButton Logout;
    private javax.swing.JTextField PHONE_NUMBER;
    private javax.swing.JTextField USERNAME;
    private javax.swing.JButton bot;
    private javax.swing.JButton case_status;
    private javax.swing.JButton hire;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JPanel p1profile;
    private javax.swing.JPanel p2home;
    private javax.swing.JPanel p3hire;
    private javax.swing.JPanel proffile;
    private javax.swing.JButton profile;
    private javax.swing.JTextField search;
    private javax.swing.JButton showlawyer;
    // End of variables declaration//GEN-END:variables
}
